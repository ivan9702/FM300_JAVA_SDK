/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_startek_eng_fm300sdk_FM300SDKWrapper */

#ifndef _Included_com_startek_eng_fm300sdk_FM300SDKWrapper
#define _Included_com_startek_eng_fm300sdk_FM300SDKWrapper
#ifdef __cplusplus
extern "C" {
#endif
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_OK
#define com_startek_eng_fm300sdk_FM300SDKWrapper_OK 0L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_FAIL
#define com_startek_eng_fm300sdk_FM300SDKWrapper_FAIL -1L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_CALCELLED
#define com_startek_eng_fm300sdk_FM300SDKWrapper_CALCELLED -1L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_MEM_ERR
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_MEM_ERR -3L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_KEYCARD_CHECK_FAIL
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_KEYCARD_CHECK_FAIL -10L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_FPSET_INVALID
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_FPSET_INVALID -21L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_FPCODE_INVALID
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_FPCODE_INVALID -22L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_FP_INVALID
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_FP_INVALID -23L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_SECURITY_ERR
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_SECURITY_ERR -24L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_VALID
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_VALID 1L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_S_INVALID
#define com_startek_eng_fm300sdk_FM300SDKWrapper_S_INVALID 255L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_LEFT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_LEFT -41L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_RIGHT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_RIGHT -42L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_UP
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_UP -43L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_DOWN
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_DOWN -44L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_CHECK_MASK
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_CHECK_MASK 12032L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_NO_FP
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_NO_FP 8192L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LOW
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LOW 256L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_TOP
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_TOP 512L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_RIGHT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_RIGHT 1024L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LEFT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LEFT 2048L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LOW_RIGHT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LOW_RIGHT 1280L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LOW_LEFT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_LOW_LEFT 2304L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_TOP_RIGHT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_TOP_RIGHT 1536L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_TOP_LEFT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_TOO_TOP_LEFT 2560L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_OK
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_POSITION_OK 0L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_CHECK_MASK
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_CHECK_MASK 224L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_TOO_DARK
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_TOO_DARK 32L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_TOO_LIGHT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_TOO_LIGHT 64L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_LITTLE_LIGHT
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_LITTLE_LIGHT 96L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_AMBIGUOUS
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_DENSITY_AMBIGUOUS 128L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_NOT_YET
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_NOT_YET -32L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_A
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_A 65L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_B
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_B 66L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_C
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_C 67L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_D
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_D 68L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_E
#define com_startek_eng_fm300sdk_FM300SDKWrapper_U_CLASS_E 69L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_A
#define com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_A 1L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_B
#define com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_B 2L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_C
#define com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_C 3L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_D
#define com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_D 4L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_E
#define com_startek_eng_fm300sdk_FM300SDKWrapper_SECURITY_E 5L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_LARGE
#define com_startek_eng_fm300sdk_FM300SDKWrapper_LARGE 10L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_SMALL
#define com_startek_eng_fm300sdk_FM300SDKWrapper_SMALL 11L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_RAW
#define com_startek_eng_fm300sdk_FM300SDKWrapper_RAW 12L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_BMP
#define com_startek_eng_fm300sdk_FM300SDKWrapper_BMP 13L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_ISO
#define com_startek_eng_fm300sdk_FM300SDKWrapper_ISO 0L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_GRAY_IMAGE
#define com_startek_eng_fm300sdk_FM300SDKWrapper_GRAY_IMAGE 8L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_BIN_IMAGE
#define com_startek_eng_fm300sdk_FM300SDKWrapper_BIN_IMAGE 1L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_GRAY_LEVEL
#define com_startek_eng_fm300sdk_FM300SDKWrapper_GRAY_LEVEL 256L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_GRAY_STEP
#define com_startek_eng_fm300sdk_FM300SDKWrapper_GRAY_STEP 1L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_DEFAULT_MODE
#define com_startek_eng_fm300sdk_FM300SDKWrapper_DEFAULT_MODE 0L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_FP_CODE_LENGTH
#define com_startek_eng_fm300sdk_FM300SDKWrapper_FP_CODE_LENGTH 512L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_ISO_HEADER_LEN
#define com_startek_eng_fm300sdk_FM300SDKWrapper_ISO_HEADER_LEN 46L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_Width
#define com_startek_eng_fm300sdk_FM300SDKWrapper_Width 256L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_Height
#define com_startek_eng_fm300sdk_FM300SDKWrapper_Height 324L
#undef com_startek_eng_fm300sdk_FM300SDKWrapper_Bits_per_Pixel
#define com_startek_eng_fm300sdk_FM300SDKWrapper_Bits_per_Pixel 8L
/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_ConnectCaptureDriver
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1ConnectCaptureDriver
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_DisconnectCaptureDriver
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1DisconnectCaptureDriver
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_Snap
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1Snap
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_CreateCaptureHandle
 * Signature: (J)J
 */
JNIEXPORT jlong JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1CreateCaptureHandle
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_Capture
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1Capture
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_DestroyCaptureHandle
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1DestroyCaptureHandle
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetPrimaryCode
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetPrimaryCode
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetTemplate
 * Signature: (J[BII)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetTemplate
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetEncryptedTemplate
 * Signature: (J[BII[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetEncryptedTemplate
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_CreateImageHandle
 * Signature: (JBI)J
 */
JNIEXPORT jlong JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1CreateImageHandle
  (JNIEnv *, jobject, jlong, jbyte, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetImage
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetImage
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_DestroyImageHandle
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1DestroyImageHandle
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_CreateEnrollHandle
 * Signature: (JB)J
 */
JNIEXPORT jlong JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1CreateEnrollHandle
  (JNIEnv *, jobject, jlong, jbyte);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_Enroll
 * Signature: (JJ[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1Enroll
  (JNIEnv *, jobject, jlong, jlong, jbyteArray, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_EnrollEx
 * Signature: (JJ[B[BI)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1EnrollEx
  (JNIEnv *, jobject, jlong, jlong, jbyteArray, jbyteArray, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_EnrollEx_Encrypted
 * Signature: (JJ[BI[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1EnrollEx_1Encrypted
  (JNIEnv *, jobject, jlong, jlong, jbyteArray, jint, jbyteArray, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_DestroyEnrollHandle
 * Signature: (JJ)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1DestroyEnrollHandle
  (JNIEnv *, jobject, jlong, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_ImageMatch
 * Signature: (J[BI)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1ImageMatch
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_CodeMatch
 * Signature: (J[B[BI)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1CodeMatch
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_ImageMatchEx
 * Signature: (J[BI)J
 */
JNIEXPORT jlong JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1ImageMatchEx
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_CodeMatchEx
 * Signature: (J[B[BI)J
 */
JNIEXPORT jlong JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1CodeMatchEx
  (JNIEnv *, jobject, jlong, jbyteArray, jbyteArray, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_CheckBlank
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1CheckBlank
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_Diagnose
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1Diagnose
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_SaveImage
 * Signature: (JJILjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1SaveImage
  (JNIEnv *, jobject, jlong, jlong, jint, jstring);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_SaveISOImage
 * Signature: (JJILjava/lang/String;BB)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1SaveISOImage
  (JNIEnv *, jobject, jlong, jlong, jint, jstring, jbyte, jbyte);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_DisplayImage
 * Signature: (JLjava/awt/Canvas;JIISS)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1DisplayImage
  (JNIEnv *, jobject, jlong, jobject, jlong, jint, jint, jshort, jshort);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetImageDimension
 * Signature: (J[S)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetImageDimension
  (JNIEnv *, jobject, jlong, jshortArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetImageData
 * Signature: (J[BSS)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetImageData
  (JNIEnv *, jobject, jlong, jbyteArray, jshort, jshort);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_SaveISOminutia
 * Signature: (JLjava/lang/String;[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1SaveISOminutia
  (JNIEnv *, jobject, jlong, jstring, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_LoadISOminutia
 * Signature: (JLjava/lang/String;[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1LoadISOminutia
  (JNIEnv *, jobject, jlong, jstring, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    createimage
 * Signature: ([BII)Ljava/awt/Image;
 */
JNIEXPORT jobject JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_createimage
  (JNIEnv *, jobject, jbyteArray, jint, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_RawDataToBMP
 * Signature: ([BSS[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1RawDataToBMP
  (JNIEnv *, jobject, jbyteArray, jshort, jshort, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_RawtoISOimage
 * Signature: (J[BSSBB[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1RawtoISOimage
  (JNIEnv *, jobject, jlong, jbyteArray, jshort, jshort, jbyte, jbyte, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetImageQuality
 * Signature: (J)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetImageQuality
  (JNIEnv *, jobject, jlong);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_SetPublicKey
 * Signature: (J[BI)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1SetPublicKey
  (JNIEnv *, jobject, jlong, jbyteArray, jint);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_SetSessionKey
 * Signature: (J[B)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1SetSessionKey
  (JNIEnv *, jobject, jlong, jbyteArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_GetDeleteData
 * Signature: (J[BI[B[I)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1GetDeleteData
  (JNIEnv *, jobject, jlong, jbyteArray, jint, jbyteArray, jintArray);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_SetLowSpeed
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1SetLowSpeed
  (JNIEnv *, jobject);

/*
 * Class:     com_startek_eng_fm300sdk_FM300SDKWrapper
 * Method:    FP_printf
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_startek_1eng_fm300sdk_FM300SDKWrapper_FP_1printf
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif
